#include "PurePursuitRobot.h"


PurePursuitRobot::PurePursuitRobot(float distBetweenWheels, int32_t gyroPort, float encoderDiameter,
 triport::port left, triport::port right, triport::port back): HoloRobot(distBetweenWheels, gyroPort, encoderDiameter, left, right, back) {
   std::vector<std::vector<float>> vec = init();
   for (std::vector<float> v : vec) {
     points.push_back(Point(v[0], v[1], v[2]));
   }
}

int PurePursuitRobot::findClosestPoint(float x, float y, int start, int end) {
  start = fmax(start, 0);
  end = fmin(end, points.size() - 1);

  int minIndex = start;
  float minDist = distanceBetweenPoints(x, y, points[start].x, points[start].y);
  start += 1;
  // while start < end:
  //     dist = Utility.distance(x, y, points[start].x, points[start].y)
  //     if dist < minDist:
  //         minIndex = start
  //         minDist = dist
  //     start += 1

  return minIndex;
}

void PurePursuitRobot::drawTrajectory(VisualField *f) {
  Brain.Screen.setPenColor(green);
  for (Point p : points) {
    f->drawPoint(p.x, p.y);
  }  

}
/*
bool PurePursuitRobot::runPurePursuit() {
  PID pidX = PID(0, 0, 0);
  PID pidY = PID(0, 0, 0);
  PID pidRot = PID(0, 0, 0);
  PID pidFinal = PID(0, 0, 0); // for the last point
  
  float xvel = 0; // velocities in inches/second
  float yvel = 0;
  float tvel = 0; // angular velocity
  int li = 0; // lookahead index
  int ci = 0; // closest index
  float x = 0;
  float y = 0;
  float theta = 0;

  float errorSum = 0;

  while(li != points.size - 1 || distanceBetweenPoints(points[points.size-1].x, points[points.size-1].y, x, y) > STOP_DISTANCE_THRESHOLD) {

    // Find closest waypoint within 5 points of the current waypoint
    ci = this.findClosestPoint(points, x, y, ci, ci + 30);
  
    // Update lookahead distance
    li = ci
    while(li < points.size - 1 && distanceBetweenPoints(points[li].x, points[li].y, points[ci].x, points[ci].y) < lookahead) {
      li += 1;
    }

    // Calculate target velocities
    float targetXVel = pidX.tick(points[li].x - x);
    float targetYVel = pidY.tick(points[li].y - y);

    // Constrain maximum robot speed
    float mag = hypo(targetXVel, targetYVel);
    float scalar = Math.min(1, MAX_SPEED / mag);
    targetXVel *= scalar;
    targetYVel *= scalar;
      
    // Calculate heading delta (turn the fastest way)
    float dtheta = (points[li].theta - theta) % (2*PI);
    if(dtheta > PI) {
      dtheta -= 2*PI;
    }
    targetTVel = pidRot.tick(dtheta);

    // set x, y, and theta velocities
    moveWithComponents(xvel, yvel, tvel);
  }

  return false;
}

std::vector<Point> loadPointsFromCSV(std::string filepath) {
  int byteLen = Brain.SDcard.size(filename.c_str()) + 10; // just in case this is off for some reason
  unsigned char* c = new unsigned char[byteLen];
  Brain.SDcard.loadfile(filename.c_str(), c, byteLen);

  int lineCount = 0;
  for(int i=0; i<byteLen; i++) { if(i != byteLen - 1 && c[i] == 13 && c[i+1] == 10) { lineCount++; } }
  std::vector<Point> points;
  points.reserve(lineCount-3);
  for(int i = 0; i < lineCount - 3; ++i) { points.push_back(Point()); }

  // TODO: read in lookahead, p, and d
  std::string s = "";
  int currInd = 0;
  for(int i=0; i<byteLen; i++) {
    s += c[i];
    if(i != byteLen - 1 && c[i] == 13 && c[i+1] == 10) {
      int commaIndex1 = s.find(",");
      int commaIndex2 = s.find(commaIndex1+1, s.end(), ",");
      points[currInd].x = atof(s.substr(0, commaIndex1).c_str());
      points[currInd].y = atof(s.substr(commaIndex1 + 1, commaIndex2 - commaIndex1 + 1).c_str());
      points[currInd].theta = atof(s.substr(commaIndex2 + 1, s.length() - commaIndex2 + 1).c_str());
      currInd++;
      s = "";
    }
  }
  return points;
}*/

std::vector<std::vector<float>> PurePursuitRobot::init() {
  return {{78.2,24.44,-1.57},{77.72,24.51,-1.57},{77.23,24.59,-1.57},{76.74,24.66,-1.57},{76.25,24.74,-1.57},{75.76,24.81,-1.57},{75.27,24.89,-1.57},{74.79,24.96,-1.57},{74.3,25.03,-1.57},{73.81,25.11,-1.57},{73.33,25.18,-1.57},{72.84,25.26,-1.57},{72.35,25.33,-1.57},{71.87,25.4,-1.57},{71.39,25.48,-1.57},{70.9,25.55,-1.57},{70.42,25.63,-1.57},{69.94,25.71,-1.57},{69.45,25.78,-1.57},{68.97,25.86,-1.57},{68.49,25.94,-1.57},{68.02,26.03,-1.57},{67.54,26.11,-1.57},{67.07,26.21,-1.57},{66.6,26.3,-1.57},{66.13,26.4,-1.57},{65.66,26.52,-1.57},{65.21,26.64,-1.57},{64.76,26.79,-1.57},{64.32,26.96,-1.57},{63.9,27.17,-1.57},{63.5,27.42,-1.57},{63.14,27.75,-1.57},{62.82,28.14,-1.57},{62.53,28.57,-1.57},{62.27,29.03,-1.57},{62.02,29.5,-1.57},{61.78,29.96,-1.57},{61.52,30.43,-1.57},{61.27,30.88,-1.57},{61.0,31.33,-1.57},{60.72,31.77,-1.57},{60.45,32.18,-1.57},{60.18,32.6,-1.57},{59.91,33.01,-1.57},{59.64,33.42,-1.57},{59.36,33.83,-1.57},{59.09,34.25,-1.57},{58.82,34.66,-1.57},{58.54,35.07,-1.57},{58.28,35.48,-1.57},{58.02,35.9,-1.57},{57.76,36.32,-1.57},{57.52,36.74,-1.57},{57.29,37.17,-1.57},{57.07,37.61,-1.57},{56.88,38.06,-1.57},{56.71,38.52,-1.57},{56.58,38.99,-1.57},{56.51,39.47,-1.57},{56.49,39.96,-1.57},{56.55,40.45,-1.57},{56.69,40.94,-1.57},{56.91,41.4,-1.57},{57.2,41.83,-1.57},{57.55,42.22,-1.57},{57.93,42.58,-1.57},{58.33,42.91,-1.57},{58.75,43.21,-1.57},{59.19,43.49,-1.57},{59.62,43.74,-1.57},{60.03,43.99,-1.57},{60.44,44.24,-1.57},{60.85,44.49,-1.57},{61.25,44.75,-1.57},{61.65,45.01,-1.57},{62.04,45.27,-1.57},{62.43,45.52,-1.57},{62.82,45.77,-1.57},{63.23,45.99,-1.57},{63.66,46.17,-1.57},{64.15,46.27,-1.57},{64.69,46.27,-1.57},{65.23,46.19,-1.57},{65.77,46.08,-1.57},{66.29,45.95,-1.57},{66.81,45.81,-1.57},{67.32,45.67,-1.57},{67.82,45.54,-1.57},{68.32,45.4,-1.57},{68.83,45.26,-1.57},{69.33,45.13,-1.57},{69.79,45.0,-1.57},{70.25,44.87,-1.57},{70.71,44.73,-1.57},{71.16,44.58,-1.57},{71.6,44.42,-1.57},{72.02,44.25,-1.57},{72.43,44.05,-1.57},{72.81,43.82,-1.57},{73.13,43.55,-1.57},{73.35,43.19,-1.57},{73.46,42.72,-1.57},{73.67,42.22,-1.57},{74.12,41.79,-1.57},{74.63,41.5,-1.57},{75.14,41.27,-1.57},{75.6,41.09,-1.57},{76.05,40.97,-1.57},{76.52,40.93,-1.57},{76.98,40.99,-1.57},{77.42,41.21,-1.57},{77.78,41.58,-1.57},{78.04,42.05,-1.57},{78.21,42.55,-1.57},{78.33,43.06,-1.57},{78.4,43.58,-1.57},{78.45,44.1,-1.57},{78.48,44.61,-1.57},{78.48,45.13,-1.57},{78.48,45.64,-1.57},{78.46,46.15,-1.57},{78.44,46.66,-1.57},{78.41,47.17,-1.57},{78.37,47.68,-1.57},{78.32,48.18,-1.57},{78.27,48.69,-1.57},{78.22,49.19,-1.57},{78.16,49.69,-1.57},{78.1,50.19,-1.57},{78.04,50.69,-1.57},{77.98,51.2,-1.57},{77.91,51.7,-1.57},{77.84,52.19,-1.57},{77.77,52.69,-1.57},{77.7,53.19,-1.57},{77.63,53.69,-1.57},{77.56,54.19,-1.57},{77.48,54.69,-1.57},{77.41,55.18,-1.57},{77.33,55.68,-1.57},{77.26,56.18,-1.57},{77.18,56.68,-1.57},{77.11,57.18,-1.57},{77.03,57.68,-1.57},{76.95,58.18,-1.57},{76.88,58.68,-1.57},{76.81,59.18,-1.57},{76.73,59.68,-1.57},{76.66,60.17,-1.57},{76.59,60.67,-1.57},{76.51,61.17,-1.57},{76.44,61.67,-1.57},{76.37,62.16,-1.57},{76.3,62.66,-1.57},{76.24,63.16,-1.57},{76.17,63.65,-1.57},{76.1,64.15,-1.57},{76.04,64.65,-1.57},{75.97,65.14,-1.57},{75.91,65.64,-1.57},{75.85,66.14,-1.57},{75.79,66.64,-1.57},{75.73,67.13,-1.57},{75.68,67.63,-1.57},{75.62,68.13,-1.57},{75.57,68.62,-1.57},{75.52,69.12,-1.57},{75.47,69.62,-1.57},{75.42,70.11,-1.57},{75.37,70.61,-1.57},{75.33,71.11,-1.57},{75.29,71.61,-1.57},{75.25,72.1,-1.57},{75.21,72.6,-1.57},{75.18,73.1,-1.57},{75.14,73.6,-1.57},{75.11,74.09,-1.57},{75.09,74.59,-1.57},{75.07,75.09,-1.57},{75.05,75.59,-1.57},{75.03,76.08,-1.57},{75.02,76.58,-1.57},{75.01,77.08,-1.57},{75.01,77.57,-1.57},{75.01,78.07,-1.57},{75.02,78.57,-1.57},{75.03,79.06,-1.57},{75.05,79.56,-1.57},{75.08,80.05,-1.57},{75.11,80.54,-1.57},{75.15,81.04,-1.57},{75.2,81.53,-1.57},{75.26,82.02,-1.57},{75.33,82.51,-1.57},{75.41,82.99,-1.57},{75.5,83.47,-1.57},{75.62,83.95,-1.57},{75.74,84.42,-1.57},{75.89,84.89,-1.57},{76.06,85.35,-1.57},{76.26,85.79,-1.57},{76.49,86.23,-1.57},{76.71,86.67,-1.57},{76.93,87.12,-1.57},{77.14,87.56,-1.57},{77.35,88.01,-1.57},{77.55,88.45,-1.57},{77.76,88.9,-1.57},{77.96,89.35,-1.57},{78.17,89.8,-1.57},{78.37,90.24,-1.57},{78.58,90.68,-1.57},{78.8,91.12,-1.57},{79.03,91.55,-1.57},{79.27,91.98,-1.57},{79.53,92.39,-1.57},{79.81,92.78,-1.57},{80.13,93.15,-1.57},{80.49,93.49,-1.57},{80.89,93.78,-1.57},{81.33,94.01,-1.57},{81.82,94.18,-1.57},{82.32,94.28,-1.57},{82.84,94.32,-1.57},{83.36,94.31,-1.57},{83.88,94.26,-1.57},{84.4,94.18,-1.57},{84.89,94.09,-1.57},{85.38,93.97,-1.57},{85.86,93.83,-1.57},{86.34,93.67,-1.57},{86.81,93.5,-1.57},{87.27,93.31,-1.57},{87.73,93.1,-1.57},{88.18,92.87,-1.57},{88.62,92.63,-1.57},{89.05,92.37,-1.57},{89.47,92.1,-1.57},{89.88,91.81,-1.57},{90.27,91.51,-1.57},{90.66,91.18,-1.57},{91.03,90.85,-1.57},{91.39,90.5,-1.57},{91.74,90.13,-1.57},{92.07,89.76,-1.57},{92.38,89.36,-1.57},{92.68,88.96,-1.57},{92.96,88.54,-1.57},{93.22,88.12,-1.57},{93.47,87.68,-1.57},{93.69,87.23,-1.57},{93.9,86.77,-1.57},{94.09,86.3,-1.57},{94.26,85.83,-1.57},{94.41,85.35,-1.57},{94.54,84.86,-1.57},{94.65,84.37,-1.57},{94.75,83.88,-1.57},{94.82,83.38,-1.57},{94.88,82.88,-1.57},{94.92,82.37,-1.57},{94.94,81.87,-1.57},{94.95,81.37,-1.57},{94.97,80.86,-1.57},{94.99,80.35,-1.57},{95.01,79.85,-1.57},{95.03,79.34,-1.57},{95.05,78.84,-1.57},{95.07,78.33,-1.57},{95.09,77.83,-1.57},{95.11,77.33,-1.57},{95.13,76.82,-1.57},{95.15,76.32,-1.57},{95.17,75.82,-1.57},{95.19,75.32,-1.57},{95.22,74.82,-1.57},{95.24,74.31,-1.57},{95.26,73.81,-1.57},{95.28,73.31,-1.57},{95.3,72.81,-1.57},{95.33,72.31,-1.57},{95.35,71.81,-1.57},{95.37,71.31,-1.57},{95.39,70.81,-1.57},{95.41,70.31,-1.57},{95.44,69.81,-1.57},{95.46,69.31,-1.57},{95.48,68.81,-1.57},{95.5,68.32,-1.57},{95.52,67.82,-1.57},{95.54,67.32,-1.57},{95.56,66.82,-1.57},{95.59,66.32,-1.57},{95.61,65.82,-1.57},{95.63,65.33,-1.57},{95.65,64.83,-1.57},{95.67,64.33,-1.57},{95.68,63.84,-1.57},{95.7,63.34,-1.57},{95.72,62.84,-1.57},{95.74,62.35,-1.57},{95.76,61.85,-1.57},{95.77,61.36,-1.57},{95.79,60.86,-1.57},{95.8,60.37,-1.57},{95.82,59.87,-1.57},{95.83,59.38,-1.57},{95.84,58.89,-1.57},{95.85,58.4,-1.57},{95.86,57.91,-1.57},{95.87,57.42,-1.57},{95.87,56.93,-1.57},{95.87,56.45,-1.57},{95.87,55.94,-1.57},{95.86,55.44,-1.57},{95.84,54.94,-1.57},{95.81,54.43,-1.57},{95.78,53.93,-1.57},{95.74,53.43,-1.57},{95.7,52.93,-1.57},{95.66,52.43,-1.57},{95.62,51.93,-1.57},{95.57,51.43,-1.57},{95.52,50.94,-1.57},{95.48,50.44,-1.57},{95.43,49.94,-1.57},{95.39,49.44,-1.57},{95.34,48.95,-1.57},{95.3,48.45,-1.57},{95.27,47.95,-1.57},{95.24,47.46,-1.57},{95.21,46.96,-1.57},{95.19,46.46,-1.57},{95.17,45.97,-1.57},{95.17,45.47,-1.57},{95.17,44.98,-1.57},{95.19,44.48,-1.57},{95.22,43.99,-1.57},{95.26,43.5,-1.57},{95.32,43.01,-1.57},{95.4,42.53,-1.57},{95.51,42.05,-1.57},{95.65,41.58,-1.57},{95.82,41.12,-1.57},{96.03,40.67,-1.57},{96.28,40.25,-1.57},{96.59,39.86,-1.57},{96.9,39.5,-1.57},{97.24,39.17,-1.57},{97.6,38.88,-1.57},{98.0,38.64,-1.57},{98.44,38.47,-1.57},{98.92,38.42,-1.57},{99.41,38.49,-1.57},{99.89,38.67,-1.57},{100.34,38.93,-1.57},{100.76,39.23,-1.57},{101.16,39.55,-1.57},{101.55,39.88,-1.57},{101.94,40.21,-1.57},{102.33,40.54,-1.57},{102.71,40.85,-1.57},{103.1,41.17,-1.57},{103.48,41.49,-1.57},{103.86,41.8,-1.57},{104.24,42.12,-1.57},{104.63,42.42,-1.57},{105.04,42.7,-1.57},{105.46,42.96,-1.57},{105.9,43.19,-1.57},{106.36,43.37,-1.57},{106.85,43.49,-1.57},{107.35,43.55,-1.57},{107.87,43.54,-1.57},{108.38,43.47,-1.57},{108.88,43.33,-1.57},{109.37,43.15,-1.57},{109.84,42.93,-1.57},{110.28,42.69,-1.57},{110.7,42.4,-1.57},{111.09,42.08,-1.57},{111.46,41.74,-1.57},{111.8,41.36,-1.57},{112.12,40.97,-1.57},{112.4,40.55,-1.57},{112.66,40.11,-1.57},{112.88,39.66,-1.57},{113.07,39.2,-1.57},{113.23,38.72,-1.57},{113.36,38.23,-1.57},{113.45,37.73,-1.57},{113.51,37.23,-1.57},{113.53,36.73,-1.57},{113.52,36.22,-1.57},{113.47,35.71,-1.57},{113.39,35.21,-1.57},{113.29,34.72,-1.57},{113.15,34.23,-1.57},{112.98,33.75,-1.57},{112.79,33.28,-1.57},{112.58,32.82,-1.57},{112.34,32.37,-1.57},{112.08,31.93,-1.57},{111.81,31.5,-1.57},{111.52,31.09,-1.57},{111.21,30.68,-1.57},{110.89,30.29,-1.57},{110.56,29.9,-1.57},{110.21,29.53,-1.57},{109.85,29.17,-1.57},{109.49,28.82,-1.57},{109.12,28.48,-1.57},{108.76,28.15,-1.57},{108.39,27.82,-1.57},{108.03,27.5,-1.57},{107.67,27.17,-1.57},{107.31,26.84,-1.57},{106.95,26.51,-1.57},{106.59,26.19,-1.57},{106.23,25.87,-1.57},{105.87,25.54,-1.57},{105.5,25.22,-1.57},{105.14,24.91,-1.57},{104.77,24.6,-1.57},{104.4,24.3,-1.57},{104.01,24.0,-1.57},{103.62,23.72,-1.57},{103.22,23.46,-1.57},{102.79,23.21,-1.57},{102.35,22.99,-1.57},{101.88,22.79,-1.57},{101.4,22.61,-1.57},{100.91,22.46,-1.57},{100.41,22.31,-1.57},{99.91,22.18,-1.57},{99.4,22.06,-1.57},{98.89,21.94,-1.57},{98.39,21.82,-1.57},{97.89,21.71,-1.57},{97.38,21.59,-1.57},{96.88,21.48,-1.57},{96.38,21.36,-1.57},{95.88,21.24,-1.57},{95.39,21.14,-1.57},{94.91,21.05,-1.57},{94.42,20.97,-1.57},{93.93,20.91,-1.57},{93.43,20.86,-1.57},{92.94,20.83,-1.57},{92.44,20.82,-1.57},{91.94,20.82,-1.57},{91.45,20.84,-1.57},{90.95,20.87,-1.57},{90.45,20.92,-1.57},{89.96,20.98,-1.57},{89.47,21.06,-1.57},{88.98,21.14,-1.57},{88.49,21.24,-1.57},{88.0,21.35,-1.57},{87.52,21.47,-1.57},{87.04,21.6,-1.57},{86.56,21.74,-1.57},{86.08,21.89,-1.57},{85.6,22.04,-1.57},{85.13,22.19,-1.57},{84.66,22.36,-1.57},{84.19,22.52,-1.57},{83.72,22.69,-1.57},{83.25,22.86,-1.57},{82.78,23.02,-1.57},{82.31,23.19,-1.57},{81.84,23.36,-1.57},{81.37,23.52,-1.57},{80.89,23.68,-1.57},{80.42,23.83,-1.57},{79.94,23.97,-1.57},{79.46,24.11,-1.57},{78.98,24.24,-1.57},{78.49,24.35,-1.57},{78.0,24.45,-1.57},{77.51,24.54,-1.57},{77.02,24.61,-1.57}};
}